[gd_scene load_steps=5 format=3 uid="uid://dntpalrnw5idk"]

[ext_resource type="Shader" path="res://hl.gdshader" id="1_txcgd"]
[ext_resource type="Texture2D" uid="uid://cbxv87tlcoaw5" path="res://assets/clear-tile.png" id="2_u1ni1"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_imdxd"]
resource_local_to_scene = true
shader = ExtResource("1_txcgd")
shader_parameter/brightness = null

[sub_resource type="GDScript" id="GDScript_1hfvl"]
script/source = "extends Sprite2D

signal mark_changed

const T_CLEAR	= preload(\"res://assets/clear-tile.png\")
const T_CROSSED	= preload(\"res://assets/cross-tile.png\")
const T_FULL 	= preload(\"res://assets/full-tile.png\")

var correct: bool

var highlighted:
	set(value):
		highlighted = value
		material.set_shader_parameter(\"brightness\", 0.2 if highlighted else 0.0)

@export var state: Enums.TILE_STATE:
	set(value):
		var prev_state = state
		state = value
		update_texture(state)
		if prev_state:
			
			if correct:
				if (prev_state == Enums.TILE_STATE.CLEAR || prev_state == Enums.TILE_STATE.CROSSED) && state == Enums.TILE_STATE.FULL:
					mark_changed.emit(1)
				if (prev_state == Enums.TILE_STATE.FULL && (state == Enums.TILE_STATE.CLEAR || state == Enums.TILE_STATE.CROSSED)):
					mark_changed.emit(-1)
			else:
				if (prev_state == Enums.TILE_STATE.CLEAR || prev_state == Enums.TILE_STATE.CROSSED) && state == Enums.TILE_STATE.FULL:
					mark_changed.emit(-1)
				if (prev_state == Enums.TILE_STATE.FULL && (state == Enums.TILE_STATE.CLEAR || state == Enums.TILE_STATE.CROSSED)):
					mark_changed.emit(1)

func _ready():
	state = Enums.TILE_STATE.CLEAR

func _process(delta):
	pass
	
func update_texture(state):
	match state:
		Enums.TILE_STATE.CLEAR:
			set_texture(T_CLEAR)
		Enums.TILE_STATE.CROSSED:
			set_texture(T_CROSSED)
		Enums.TILE_STATE.FULL:
			set_texture(T_FULL)
	
func height():
	return get_texture().get_height() * scale.y
	
func width():
	return get_texture().get_width() * scale.x

"

[node name="Tile" type="Sprite2D"]
texture_filter = 1
material = SubResource("ShaderMaterial_imdxd")
scale = Vector2(2, 2)
texture = ExtResource("2_u1ni1")
centered = false
script = SubResource("GDScript_1hfvl")
